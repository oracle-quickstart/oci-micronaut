plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.4"
    id("io.micronaut.aot") version "4.3.4"
}

group = "microanut.mushop.newsletter.subscription"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")

    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut:micronaut-runtime")
    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.email:micronaut-email-javamail")

    compileOnly("io.micronaut.openapi:micronaut-openapi-annotations")
    
    runtimeOnly("org.slf4j:slf4j-simple")
    runtimeOnly("org.yaml:snakeyaml")

    testImplementation("com.fnproject.fn:testing-junit4")
    testImplementation("io.micronaut:micronaut-http-client")

}

application {
    mainClass.set("com.example.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}

tasks {
    // the base image for Oracle Function is fnproject/fn-java-fdk:jre11-latest
    // TODO: build fnproject image on top of graalvm-ce
//    if (javaBaseImage == "graalvm") {
//        dockerfile {
//            baseImage = "ghcr.io/graalvm/graalvm-ce:ol8-java11-22"
//        }
//    }

    dockerfileNative {
        args("-XX:MaximumHeapSizePercent=80")
        instruction "RUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.11/main' >> /etc/apk/repositories && apk update && apk add 'zlib<1.2.12'"
    }

    dockerBuild {
        images = ["phx.ocir.io/oraclelabs/micronaut-showcase/mushop/$project.name-${javaBaseImage}:$project.version"]
    }

    dockerBuildNative {
        images = ["phx.ocir.io/oraclelabs/micronaut-showcase/mushop/${project.name}-native:$project.version"]
    }
}

graalvmNative.toolchainDetection = false
graalvmNative {
    binaries.configureEach {
        buildArgs.add("--initialize-at-build-time=newsletter.subscription")
        buildArgs.add("--static")
        buildArgs.add("--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jni=ALL-UNNAMED")
    }
}

micronaut {
    runtime("oracle_function")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("newsletter.subscription.*")
    }aot {
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}
